{% comment %}
  Enhanced Product Template
  Features:
  - Responsive product gallery
  - Product information
  - Variant selector
  - Add to cart functionality
  - Tabbed content (description, additional info, reviews)
  - Mobile-friendly with Tailwind CSS
  - Properly disabled as a section on non-product pages
{% endcomment %}

<div
  data-section-id="{{ section.id }}"
  data-section-type="product-template"
  data-product-id="{{ product.id }}"
  class="product-template md:mt-8 mb-5 md:mb-12"
>
  <div class="container mx-auto px-4">
    <div class="flex flex-wrap -mx-4">
      <!-- Product Media -->
      <div class="w-full md:w-1/2 px-4 mb-6 md:mb-0">
        <div class="product-media">
          <!-- Main Product Image -->
          <div class="product-featured-image mb-4">
            <img
              src="{{ product.featured_image | img_url: 'large' }}"
              alt="{{ product.title | escape }}"
              class="w-full h-auto object-cover rounded-lg"
              id="featured-image"
              height=""
              width=""
            >
          </div>

          <!-- Thumbnail Gallery -->
          {% if product.images.size > 1 %}
            <div class="product-thumbnails flex flex-wrap -mx-1">
              {% for image in product.images %}
                {% liquid
                  assign base_img = image | file_url
                %}

            
                <div class="w-1/4 px-1 mb-2">
                  <button
                    class="thumbnail-button w-full h-auto border {% if forloop.first %}border-black{% else %}border-gray-200{% endif %} rounded overflow-hidden"
                    data-full-size="https:{{ base_img |  replace: '/files/files', '/files' }}"
                    data-alt="{{ image.alt | escape }}"
                  >
                    <img
                      src="https:{{ base_img |  replace: '/files/files', '/files' }}"
                      alt="{{ image.alt | escape }}"
                      class="w-full h-auto object-cover"
                      height=""
                      width=""
                    >
                  </button>
                </div>
              {% endfor %}
            </div>
          {% endif %}
        </div>
      </div>

      <!-- Product Info -->
      <div class="w-full md:w-1/2 px-4">
        <div class="product-details">
          <!-- Vendor -->
          {% if section.settings.show_vendor and product.vendor %}
            <div class="product-vendor text-sm text-gray-500 uppercase tracking-wider mb-2">
              {{ product.vendor }}
            </div>
          {% endif %}

          <!-- Title -->
          <h1 class="text-3xl font-medium mb-4">{{ product.title }}</h1>

          <!-- Price -->
          <div class="product-price mb-6">
            <span class="text-xl font-medium {% if product.compare_at_price > product.price %}text-red-600{% endif %}">
              {{ product.price | money }}
            </span>

            {% if product.compare_at_price > product.price %}
              <span class="ml-2 text-gray-500 line-through">
                {{ product.compare_at_price | money }}
              </span>
            {% endif %}
          </div>

          <!-- Short Description -->
          {% if product.description != blank and section.settings.show_short_description %}
            <div class="product-short-description mb-6 text-gray-600">
              <p>{{ product.description | strip_html | truncatewords: section.settings.short_description_words }}</p>
            </div>
          {% endif %}

          <!-- Product Form -->
          {% form 'product', product, class: 'product-form' %}
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

            <!-- Variant Selector -->
            {% unless product.has_only_default_variant %}
              <div class="variant-selectors mb-6">
                {% for option in product.options_with_values %}
                  <div class="mb-4">
                    {% if section.settings.show_variant_labels %}
                      <label class="block text-sm font-medium mb-2">{{ option.name }}</label>
                    {% endif %}

                    <div class="flex flex-wrap -mx-1">
                      {% for value in option.values %}
                        <div class="px-1 mb-2">
                          <input
                            type="radio"
                            id="option{{ option.position }}-{{ value | escape }}"
                            name="options[{{ option.name }}]"
                            value="{{ value | escape }}"
                            {% if option.selected_value == value %}
                              checked
                            {% endif %}
                            class="hidden variant-option"
                            data-option-position="{{ option.position }}"
                            data-value="{{ value | escape }}"
                          >
                          <label
                            for="option{{ option.position }}-{{ value | escape }}"
                            class="inline-block px-4 py-2 border rounded min-w-[40px] text-center cursor-pointer transition-colors {% if option.selected_value == value %}border-black bg-black text-white{% else %}border-gray-300 hover:border-gray-400{% endif %}"
                          >
                            {{ value }}
                          </label>
                        </div>
                      {% endfor %}
                    </div>
                  </div>
                {% endfor %}
              </div>
            {% endunless %}

            <!-- Quantity Selector -->
            {% if section.settings.show_quantity_selector %}
              <div class="mb-6">
                <label for="Quantity" class="block text-sm font-medium mb-2">Quantity</label>
                <div class="flex">
                  <button
                    type="button"
                    class="quantity-decrease w-10 h-10 border border-gray-300 flex items-center justify-center rounded-l"
                  >
                    <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M5 12H19"></path>
                    </svg>
                  </button>

                  <input
                    type="number"
                    name="quantity"
                    id="Quantity"
                    value="1"
                    min="1"
                    class="quantity-input w-16 h-10 border-t border-b border-gray-300 text-center"
                  >

                  <button
                    type="button"
                    class="quantity-increase w-10 h-10 border border-gray-300 flex items-center justify-center rounded-r"
                  >
                    <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M12 5V19"></path>
                      <path d="M5 12H19"></path>
                    </svg>
                  </button>
                </div>
              </div>
            {% endif %}

            <!-- Add to Cart Button -->
            <div class="add-to-cart-wrapper">
              <button
                type="submit"
                name="add"
                class="add-to-cart-button w-full bg-black text-white py-3 px-6 rounded-md flex items-center justify-center hover:bg-gray-800 transition"
                {% unless product.available %}
                  disabled
                {% endunless %}
              >
                <svg class="w-5 h-5 mr-2" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="9" cy="21" r="1"></circle>
                  <circle cx="20" cy="21" r="1"></circle>
                  <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
                </svg>
                <span>
                  {% if product.available %}
                    Add to Cart
                  {% else %}
                    Sold Out
                  {% endif %}
                </span>
              </button>
            </div>

            {% if section.settings.show_dynamic_checkout %}
              <div class="mt-3">
                {{ form | payment_button }}
              </div>
            {% endif %}
          {% endform %}

          <!-- Additional Product Meta -->
          <div class="product-meta mt-6 pt-6 border-t border-gray-200">
            <!-- SKU -->
            {% if product.selected_or_first_available_variant.sku != blank and section.settings.show_sku %}
              <div class="product-sku mb-2 text-sm">
                <span class="font-medium">SKU:</span>
                <span id="variant-sku">{{ product.selected_or_first_available_variant.sku }}</span>
              </div>
            {% endif %}

            <!-- Product Type -->
            {% if product.type != blank and section.settings.show_product_type %}
              <div class="product-type mb-2 text-sm"><span class="font-medium">Type:</span> {{ product.type }}</div>
            {% endif %}

            <!-- Collections -->
            {% if product.collections.size > 0 and section.settings.show_collections %}
              <div class="product-collections mb-2 text-sm">
                <span class="font-medium">Collections:</span>
                {% for collection in product.collections %}
                  <a href="{{ collection.url }}" class="text-gray-600 hover:text-black transition">
                    {{- collection.title -}}
                  </a>
                  {%- unless forloop.last %}, {% endunless %}
                {% endfor %}
              </div>
            {% endif %}

            <!-- Tags -->
            {% if product.tags.size > 0 and section.settings.show_tags %}
              <div class="product-tags mb-2 text-sm">
                <span class="font-medium">Tags:</span>
                {% for tag in product.tags %}
                  <span class="text-gray-600">{{ tag }}</span>
                  {%- unless forloop.last %}, {% endunless %}
                {% endfor %}
              </div>
            {% endif %}

            <!-- Share -->
            {% if section.settings.show_share_buttons %}
              <div class="product-share mt-4">
                <span class="block text-sm font-medium mb-2">Share:</span>
                <div class="flex space-x-2">
                  <a
                    href="https://www.facebook.com/sharer.php?u={{ shop.url | append: product.url }}"
                    class="p-2 rounded-full bg-gray-100 hover:bg-gray-200 transition"
                    target="_blank"
                    rel="noopener"
                  >
                    <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M18.77 7.46H14.5v-1.9c0-.9.6-1.1 1-1.1h3V.5h-4.33C10.24.5 9.5 3.44 9.5 5.32v2.15h-3v4h3v12h5v-12h3.85l.42-4z"/>
                    </svg>
                  </a>
                  <a
                    href="https://twitter.com/intent/tweet?text={{ product.title | url_encode }}&url={{ shop.url | append: product.url | url_encode }}"
                    class="p-2 rounded-full bg-gray-100 hover:bg-gray-200 transition"
                    target="_blank"
                    rel="noopener"
                  >
                    <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                    </svg>
                  </a>
                  <a
                    href="https://pinterest.com/pin/create/button/?url={{ shop.url | append: product.url | url_encode }}&media={{ product.featured_image | img_url: 'large' | url_encode }}&description={{ product.description | strip_html | truncatewords: 20 | url_encode }}"
                    class="p-2 rounded-full bg-gray-100 hover:bg-gray-200 transition"
                    target="_blank"
                    rel="noopener"
                  >
                    <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.162-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.401.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.354-.629-2.758-1.379l-.749 2.848c-.269 1.045-1.004 2.352-1.498 3.146 1.123.345 2.306.535 3.55.535 6.607 0 11.985-5.365 11.985-11.987C23.97 5.39 18.592.026 11.985.026L12.017 0z"/>
                    </svg>
                  </a>
                  <a
                    href="mailto:?subject={{ product.title | url_encode }}&body={{ shop.url | append: product.url | url_encode }}"
                    class="p-2 rounded-full bg-gray-100 hover:bg-gray-200 transition"
                  >
                    <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                    </svg>
                  </a>
                </div>
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>

    <!-- Product Tabs -->
    <div class="product-tabs mt-12">
      <div class="border-b border-gray-200">
        <div class="flex flex-wrap -mb-px">
          {% for block in section.blocks %}
            {% if block.type == 'tab' %}
              <button
                class="tab-button px-6 py-3 border-b-2 text-sm font-medium whitespace-nowrap {% if forloop.first %}border-black text-black{% else %}border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300{% endif %}"
                data-target="tab-{{ block.id }}"
              >
                {{ block.settings.title }}
              </button>
            {% endif %}
          {% endfor %}
        </div>
      </div>

      <div class="tab-content-container mt-6">
        {% for block in section.blocks %}
          {% if block.type == 'tab' %}
            <div
              id="tab-{{ block.id }}"
              class="tab-content prose max-w-none {% unless forloop.first %}hidden{% endunless %}"
              {{ block.shopify_attributes }}
            >
              {% case block.settings.content_type %}
                {% when 'description' %}
                  {{ product.description }}

                {% when 'specifications' %}
                  {% if block.settings.specifications != blank %}
                    {{ block.settings.specifications }}
                  {% else %}
                    <p>No specifications available for this product.</p>
                  {% endif %}

                {% when 'reviews' %}
                  <div class="product-reviews">
                    {% if block.settings.enable_product_reviews %}
                      <div id="shopify-product-reviews" data-id="{{ product.id }}">
                        {{ product.metafields.spr.reviews }}
                      </div>
                    {% else %}
                      <div class="flex flex-col items-center justify-center py-8">
                        <h3 class="text-lg font-medium mb-4">No reviews yet</h3>
                        <p class="text-gray-500 mb-4 text-center">Be the first to review this product</p>
                        <button class="write-review-button px-6 py-2 bg-gray-100 hover:bg-gray-200 rounded-md transition">
                          Write a review
                        </button>
                      </div>

                      <div class="write-review-form hidden mt-6 p-4 border rounded-md">
                        <h3 class="text-lg font-medium mb-4">Write a Review</h3>
                        <form id="review-form" class="space-y-4">
                          <div>
                            <label for="review-name" class="block text-sm font-medium mb-1">Name</label>
                            <input type="text" id="review-name" class="w-full px-3 py-2 border rounded-md">
                          </div>
                          <div>
                            <label for="review-email" class="block text-sm font-medium mb-1">Email</label>
                            <input type="email" id="review-email" class="w-full px-3 py-2 border rounded-md">
                          </div>
                          <div>
                            <label for="review-rating" class="block text-sm font-medium mb-1">Rating</label>
                            <div class="flex">
                              {% for i in (1..5) %}
                                <button
                                  type="button"
                                  class="star-rating-button text-gray-300 hover:text-yellow-400"
                                  data-rating="{{ i }}"
                                >
                                  <svg class="w-6 h-6" viewBox="0 0 24 24" fill="currentColor">
                                    <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
                                  </svg>
                                </button>
                              {% endfor %}
                              <input type="hidden" id="review-rating-value" value="0">
                            </div>
                          </div>
                          <div>
                            <label for="review-title" class="block text-sm font-medium mb-1">Review Title</label>
                            <input type="text" id="review-title" class="w-full px-3 py-2 border rounded-md">
                          </div>
                          <div>
                            <label for="review-body" class="block text-sm font-medium mb-1">Review</label>
                            <textarea id="review-body" rows="4" class="w-full px-3 py-2 border rounded-md"></textarea>
                          </div>
                          <div>
                            <button
                              type="submit"
                              class="px-6 py-2 bg-black text-white rounded-md hover:bg-gray-800 transition"
                            >
                              Submit Review
                            </button>
                          </div>
                        </form>
                      </div>
                    {% endif %}
                  </div>

                {% when 'custom' %}
                  {{ block.settings.custom_content }}
              {% endcase %}
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const productContainer = document.querySelector('.product-template');
    if (!productContainer) return;

    // Thumbnail gallery
    const thumbnailButtons = document.querySelectorAll('.thumbnail-button');
    const featuredImage = document.getElementById('featured-image');

    thumbnailButtons.forEach((button) => {
      button.addEventListener('click', function () {
        // Update featured image
        if (featuredImage) {
          featuredImage.src = this.dataset.fullSize;
          featuredImage.alt = this.dataset.alt || '';
        }

        // Update active state
        thumbnailButtons.forEach((btn) => {
          btn.classList.remove('border-black');
          btn.classList.add('border-gray-200');
        });

        this.classList.remove('border-gray-200');
        this.classList.add('border-black');
      });
    });

    // Quantity selector
    const quantityInput = document.querySelector('.quantity-input');
    const decreaseBtn = document.querySelector('.quantity-decrease');
    const increaseBtn = document.querySelector('.quantity-increase');

    if (quantityInput && decreaseBtn && increaseBtn) {
      decreaseBtn.addEventListener('click', function () {
        let value = parseInt(quantityInput.value);
        value = Math.max(1, value - 1);
        quantityInput.value = value;
      });

      increaseBtn.addEventListener('click', function () {
        let value = parseInt(quantityInput.value);
        value += 1;
        quantityInput.value = value;
      });
    }

    // Variant selection
    const variantOptions = document.querySelectorAll('.variant-option');
    const variantIdInput = document.querySelector('input[name="id"]');

    if (variantOptions.length && variantIdInput) {
      // Get the initial variant selection
      let selectedOptions = {};
      variantOptions.forEach((option) => {
        if (option.checked) {
          const position = option.dataset.optionPosition;
          const value = option.dataset.value;
          selectedOptions[`option${position}`] = value;
        }
      });

      // Add change event to all variant options
      variantOptions.forEach((option) => {
        option.addEventListener('change', function () {
          // Update selectedOptions
          const position = this.dataset.optionPosition;
          const value = this.dataset.value;

          selectedOptions[`option${position}`] = value;

          // Get the product JSON
          const productJson = JSON.parse(
            document.getElementById(`ProductJson-${productContainer.dataset.productId}`)?.textContent || '{}'
          );

          // Find the matching variant
          const matchingVariant = productJson.variants.find((variant) => {
            return Object.entries(selectedOptions).every(([key, value]) => {
              return variant[key] === value;
            });
          });

          if (matchingVariant) {
            // Update variant ID in the form
            variantIdInput.value = matchingVariant.id;

            // Update URL
            if (history.replaceState) {
              const newUrl = new URL(window.location.href);
              newUrl.searchParams.set('variant', matchingVariant.id);
              window.history.replaceState({ path: newUrl.toString() }, '', newUrl.toString());
            }

            // Update price if needed
            const priceContainer = productContainer.querySelector('.product-price');
            if (priceContainer) {
              const priceElement = priceContainer.querySelector('span:first-child');
              const compareAtPriceElement = priceContainer.querySelector('span:last-child');

              if (priceElement) {
                const formatter = new Intl.NumberFormat('en-US', {
                  style: 'currency',
                  currency: 'USD',
                });

                priceElement.textContent = formatter.format(matchingVariant.price / 100);

                if (compareAtPriceElement) {
                  if (matchingVariant.compare_at_price && matchingVariant.compare_at_price > matchingVariant.price) {
                    compareAtPriceElement.textContent = formatter.format(matchingVariant.compare_at_price / 100);
                    compareAtPriceElement.style.display = 'inline';
                    priceElement.classList.add('text-red-600');
                  } else {
                    compareAtPriceElement.style.display = 'none';
                    priceElement.classList.remove('text-red-600');
                  }
                }
              }
            }

            // Update SKU if needed
            const skuElement = document.getElementById('variant-sku');
            if (skuElement && matchingVariant.sku) {
              skuElement.textContent = matchingVariant.sku;
            }

            // Update add to cart button
            const addToCartButton = productContainer.querySelector('.add-to-cart-button');
            if (addToCartButton) {
              const buttonTextElement = addToCartButton.querySelector('span');

              if (matchingVariant.available) {
                addToCartButton.disabled = false;
                if (buttonTextElement) {
                  buttonTextElement.textContent = 'Add to Cart';
                }
              } else {
                addToCartButton.disabled = true;
                if (buttonTextElement) {
                  buttonTextElement.textContent = 'Sold Out';
                }
              }
            }
          }
        });
      });
    }

    // Tabs functionality
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');

    tabButtons.forEach((button) => {
      button.addEventListener('click', function () {
        const targetId = this.dataset.target;

        // Update tab buttons
        tabButtons.forEach((btn) => {
          btn.classList.remove('border-black', 'text-black');
          btn.classList.add('border-transparent', 'text-gray-500');
        });

        this.classList.remove('border-transparent', 'text-gray-500');
        this.classList.add('border-black', 'text-black');

        // Update tab contents
        tabContents.forEach((content) => {
          content.classList.add('hidden');
        });

        document.getElementById(targetId).classList.remove('hidden');
      });
    });

    // Review form functionality
    const writeReviewButton = document.querySelector('.write-review-button');
    const reviewForm = document.querySelector('.write-review-form');

    if (writeReviewButton && reviewForm) {
      writeReviewButton.addEventListener('click', function () {
        reviewForm.classList.toggle('hidden');
      });
    }

    // Star rating functionality
    const starButtons = document.querySelectorAll('.star-rating-button');
    const ratingInput = document.getElementById('review-rating-value');

    if (starButtons.length && ratingInput) {
      starButtons.forEach((button) => {
        button.addEventListener('click', function () {
          const rating = parseInt(this.dataset.rating);
          ratingInput.value = rating;

          // Update star colors
          starButtons.forEach((star, index) => {
            if (index < rating) {
              star.classList.remove('text-gray-300');
              star.classList.add('text-yellow-400');
            } else {
              star.classList.remove('text-yellow-400');
              star.classList.add('text-gray-300');
            }
          });
        });
      });
    }

    // Store product in recently viewed
    const currentProductId = productContainer.dataset.productId;
    let recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewed') || '[]');

    // Add current product to recently viewed if not already there
    if (!recentlyViewed.includes(currentProductId)) {
      recentlyViewed.unshift(currentProductId);
      // Keep only the last 10 items
      recentlyViewed = recentlyViewed.slice(0, 10);
      localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));
    }
  });
</script>

<script type="application/json" id="ProductJson-{{ product.id }}">
  {{ product | json }}
</script>

{% schema %}
{
  "name": "Product information",
  "disabled_on": {
    "groups": ["header", "footer"],
    "templates": ["index", "collection", "blog", "article", "page", "cart", "list-collections", "search", "404"]
  },
  "settings": [
    {
      "type": "header",
      "content": "Product information"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_short_description",
      "label": "Show short description",
      "default": true
    },
    {
      "type": "range",
      "id": "short_description_words",
      "min": 10,
      "max": 50,
      "step": 5,
      "label": "Short description word count",
      "default": 30
    },
    {
      "type": "header",
      "content": "Variant options"
    },
    {
      "type": "checkbox",
      "id": "show_variant_labels",
      "label": "Show variant labels",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_quantity_selector",
      "label": "Show quantity selector",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dynamic_checkout",
      "label": "Show dynamic checkout button",
      "default": true,
      "info": "Each customer will see their preferred payment method from those available on your store."
    },
    {
      "type": "header",
      "content": "Product details"
    },
    {
      "type": "checkbox",
      "id": "show_sku",
      "label": "Show SKU",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_product_type",
      "label": "Show product type",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_collections",
      "label": "Show collections",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_tags",
      "label": "Show tags",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_share_buttons",
      "label": "Show social sharing buttons",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Tab title",
          "default": "Description"
        },
        {
          "type": "select",
          "id": "content_type",
          "label": "Content type",
          "options": [
            {
              "value": "description",
              "label": "Product description"
            },
            {
              "value": "specifications",
              "label": "Specifications"
            },
            {
              "value": "reviews",
              "label": "Reviews"
            },
            {
              "value": "custom",
              "label": "Custom content"
            }
          ],
          "default": "description"
        },
        {
          "type": "richtext",
          "id": "specifications",
          "label": "Specifications",
          "info": "Only used if content type is set to 'Specifications'",
          "default": "<p>No specifications available for this product.</p>"
        },
        {
          "type": "checkbox",
          "id": "enable_product_reviews",
          "label": "Enable Shopify product reviews",
          "info": "You need to install the Shopify Product Reviews app",
          "default": false
        },
        {
          "type": "richtext",
          "id": "custom_content",
          "label": "Custom content",
          "info": "Only used if content type is set to 'Custom content'"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product information",
      "category": "Product",
      "blocks": [
        {
          "type": "tab",
          "settings": {
            "title": "Description",
            "content_type": "description"
          }
        },
        {
          "type": "tab",
          "settings": {
            "title": "Specifications",
            "content_type": "specifications"
          }
        },
        {
          "type": "tab",
          "settings": {
            "title": "Reviews",
            "content_type": "reviews"
          }
        }
      ]
    }
  ]
}
{% endschema %}
